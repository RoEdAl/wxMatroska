#
# Inno Setup
#

FIND_PROGRAM(PANDOC_BIN "pandoc")
ADD_EXECUTABLE(Pandoc IMPORTED)
SET_PROPERTY(TARGET Pandoc PROPERTY IMPORTED_LOCATION ${PANDOC_BIN})
IF(NOT PANDOC_BIN)
	MESSAGE(FATAL_ERROR "Pandoc utility not found")
ENDIF()

UNSET(ISCCHINT)
FOREACH(H ${CMAKE_SYSTEM_PREFIX_PATH})
	LIST(APPEND ISCCHINT "${H}/Inno Setup 6")
ENDFOREACH()
FIND_PROGRAM(ISCC "iscc" HINT ${ISCCHINT})

ADD_EXECUTABLE(InnoSetup IMPORTED)
SET_PROPERTY(TARGET InnoSetup PROPERTY IMPORTED_LOCATION ${ISCC})

SET(ISETUP_NAME cue2mkc-${EX_PLATFORM_NAME}$<$<CONFIG:Debug>:-dbg>)
SET(LICENSE_FILE license.md.txt)
SET(LICENSE_FILE_TEMPLATE template.rtf)

SET(ISETUP_SOURCE setup.iss)
SET(ISETUP_SOURCES ${ISETUP_SOURCE} ${LICENSE_FILE} ${LICENSE_FILE_TEMPLATE} ../cue/ISO-639-2_utf-8.txt)
SOURCE_GROUP("Setup Files" FILES ${ISETUP_SOURCES})

IF(NOT DEFINED CMAKE_CONFIGURATION_TYPES)
	MESSAGE(FATAL_ERROR "Multi-configuration generator required")
ENDIF()

ADD_CUSTOM_COMMAND( 
	OUTPUT $<CONFIG>/license.rtf
	MAIN_DEPENDENCY ${LICENSE_FILE}
	DEPENDS ${LICENSE_FILE_TEMPLATE}
	COMMAND Pandoc
		-i ${LICENSE_FILE}
		--template ${LICENSE_FILE_TEMPLATE}
		-s
		-t rtf
		-o ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/license.rtf
	COMMENT "Creating license file [RTF]"
	WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
)

ADD_CUSTOM_COMMAND( 
	OUTPUT $<CONFIG>/license.txt
	MAIN_DEPENDENCY ${LICENSE_FILE}
	COMMAND Pandoc
		-i ${LICENSE_FILE}
		-s
		-t plain+smart
		-o ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/license.txt
	COMMENT "Creating license file [TXT]"
	WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
)

ADD_CUSTOM_TARGET(license ALL
	SOURCES ${LICENSE_FILE} ${LICENSE_FILE_TEMPLATE}
	DEPENDS
		${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/license.txt
		${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/license.rtf
)
TARGET_SOURCES(license PRIVATE
	${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/license.txt
	${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/license.rtf
)
ADD_DEPENDENCIES(wxCueChapters license)
SET_PROPERTY(TARGET license PROPERTY FOLDER "setup")

ADD_CUSTOM_COMMAND( 
	OUTPUT $<CONFIG>/${ISETUP_NAME}${CMAKE_EXECUTABLE_SUFFIX}
	MAIN_DEPENDENCY ${ISETUP_SOURCE}
	DEPENDS 
		${ISETUP_SOURCE}
		../cue/ISO-639-2_utf-8.txt
		$<TARGET_PROPERTY:wxCueChapters,SOURCE_DIR>/cmake/dr-scan.cmake
		$<TARGET_PROPERTY:wxCueChapters,SOURCE_DIR>/cmake/mkcover.cmake
		$<TARGET_PROPERTY:wxCueChapters,SOURCE_DIR>/app.tags.json
		$<TARGET_FILE:wxCueChapters>
		$<TARGET_FILE:wxCueChaptersGui>
		${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/license.txt
		${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/license.rtf
	COMMAND InnoSetup
		/o${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>
		/f${ISETUP_NAME}
		/dCue2MkcBase=$<TARGET_FILE_BASE_NAME:wxCueChapters>
		/dCue2MkcExe=$<TARGET_FILE:wxCueChapters>
		/dCue2MkcGuiExe=$<TARGET_FILE:wxCueChaptersGui>
		/dCue2MkcExeArch=${EX_PLATFORM_NAME}
		/dLicenseFileRtf=${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/license.rtf
		/dLicenseFileTxt=${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/license.txt
		/dWXWidgetsLibDir=${wxWidgets_LIB_DIR}
		/dWXDllSuffix=${WXWIDGETS_DLL_SUFFIX}_x64
		/dWXVerCompact=${WXWIDGETS_VER_COMPACT}
		/dWXDebug=$<$<CONFIG:Debug>:d>
		$<$<NOT:$<CONFIG:Debug>>:/Q>
		${ISETUP_SOURCE}
	WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
)

ADD_CUSTOM_TARGET(isetup
	SOURCES ${ISETUP_SOURCE}
	DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/${ISETUP_NAME}${CMAKE_EXECUTABLE_SUFFIX}
)
ADD_DEPENDENCIES(isetup license)
SET_PROPERTY(TARGET isetup PROPERTY FOLDER "setup")

ADD_CUSTOM_COMMAND(TARGET license POST_BUILD 
	COMMAND ${CMAKE_COMMAND} -E copy_if_different ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/license.txt $<TARGET_FILE_DIR:wxCueChapters>/license.txt
)

INSTALL(
	FILES
		${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/license.rtf
		${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/license.txt
	DESTINATION $<LOWER_CASE:$<CONFIG>>
	COMPONENT cue2mkc
)


