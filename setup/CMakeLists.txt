#
# Inno Setup
#

SET(ISCCHINT "")
FOREACH(H ${CMAKE_SYSTEM_PREFIX_PATH})
	LIST(APPEND ISCCHINT "${H}/Inno Setup 6")
ENDFOREACH()
FIND_PROGRAM(ISCC "iscc" HINT ${ISCCHINT})

SET(ISETUP_NAME cue2mkc_${EX_PLATFORM_NAME})
SET(LICENSE_FILE license.md.txt)
SET(LICENSE_FILE_TEMPLATE template.rtf)

SET(ISETUP_SOURCE setup.iss)
SET(ISETUP_SOURCES ${ISETUP_SOURCE} ${LICENSE_FILE} ${LICENSE_FILE_TEMPLATE} ../cue/ISO-639-2_utf-8.txt)
SOURCE_GROUP("Setup Files" FILES ${ISETUP_SOURCES})

GET_FILENAME_COMPONENT(WXWIDGETS_DLL_SUFFIX ${wxWidgets_LIB_DIR} NAME)
STRING(FIND ${WXWIDGETS_DLL_SUFFIX} "_" LAST_UND_POS REVERSE)
STRING(SUBSTRING ${WXWIDGETS_DLL_SUFFIX} 0 ${LAST_UND_POS} WXWIDGETS_DLL_SUFFIX1)
STRING(SUBSTRING ${WXWIDGETS_DLL_SUFFIX} ${LAST_UND_POS} -1 WXWIDGETS_DLL_SUFFIX2)
STRING(REPLACE "_" "." WXWIDGETS_DLL_SUFFIX2 ${WXWIDGETS_DLL_SUFFIX2})
STRING(CONCAT WXWIDGETS_DLL_SUFFIX ${WXWIDGETS_DLL_SUFFIX1} ${WXWIDGETS_DLL_SUFFIX2})

IF(NOT DEFINED CMAKE_CONFIGURATION_TYPES)
	ADD_CUSTOM_COMMAND( 
		OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/license.rtf
		MAIN_DEPENDENCY ${LICENSE_FILE}
		DEPENDS ${LICENSE_FILE} ${LICENSE_FILE_TEMPLATE}
		COMMAND pandoc
			-i ${LICENSE_FILE}
			--template ${LICENSE_FILE_TEMPLATE}
			-s
			-t rtf
			-o ${CMAKE_CURRENT_BINARY_DIR}/license.rtf
		WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
	)

	ADD_CUSTOM_COMMAND( 
		OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/license.txt
		MAIN_DEPENDENCY ${LICENSE_FILE}
		DEPENDS ${LICENSE_FILE} 
		COMMAND pandoc
			-i ${LICENSE_FILE}
			-s
			-t plain+smart
			-o ${CMAKE_CURRENT_BINARY_DIR}/license.txt
		WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
	)

	ADD_CUSTOM_COMMAND( 
		OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${ISETUP_NAME}${CMAKE_EXECUTABLE_SUFFIX}
		MAIN_DEPENDENCY ${ISETUP_SOURCE}
		DEPENDS 
			${ISETUP_SOURCE}
			../cue/ISO-639-2_utf-8.txt
			../wxCueChapters/cmake/dr-scan.cmake
			../wxCueChapters/cmake/mkcover.cmake
			../wxCueChapters/app.tags.json
			${CMAKE_CURRENT_BINARY_DIR}/license.txt
			${CMAKE_CURRENT_BINARY_DIR}/license.rtf
			$<TARGET_FILE:wxCueChapters>
			$<TARGET_FILE:wxCueChaptersGui>
		COMMAND ${ISCC}
			/o${CMAKE_CURRENT_BINARY_DIR}
			/f${ISETUP_NAME}
			/dCue2MkcBase=cue2mkc
			/dCue2MkcExe=$<TARGET_FILE:wxCueChapters>
			/dCue2MkcGuiExe=$<TARGET_FILE:wxCueChaptersGui>
			/dCue2MkcExeArch=${EX_PLATFORM_NAME}
			/dLicenseFileRtf=${CMAKE_CURRENT_BINARY_DIR}/license.rtf
			/dLicenseFileTxt=${CMAKE_CURRENT_BINARY_DIR}/license.txt
			/dWXWidgetsLibDir=${wxWidgets_LIB_DIR}
			/dWXDllSuffix=${WXWIDGETS_DLL_SUFFIX}
			/dWXVerCompact=${WXWIDGETS_VER_COMPACT}
			/dWXDebug=$<$<CONFIG:Debug>:d>
			/dMinGWBase=${MINGW64_BASE}
			$<$<NOT:$<CONFIG:Debug>>:/Q>
			${ISETUP_SOURCE}
		WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
	)

	ADD_CUSTOM_TARGET(isetup SOURCES ${ISETUP_SOURCES} DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/${ISETUP_NAME}${CMAKE_EXECUTABLE_SUFFIX})
	SET_PROPERTY(TARGET isetup PROPERTY FOLDER "setup")

	ADD_CUSTOM_COMMAND(TARGET isetup POST_BUILD 
		COMMAND ${CMAKE_COMMAND} -E copy_if_different ${CMAKE_CURRENT_BINARY_DIR}/license.txt $<TARGET_FILE_DIR:wxCueChapters>
		COMMENT "Copying license file"
	)
ELSE()
	ADD_CUSTOM_COMMAND( 
		OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/license.rtf
		MAIN_DEPENDENCY ${LICENSE_FILE}
		DEPENDS ${LICENSE_FILE} ${LICENSE_FILE_TEMPLATE}
		COMMAND pandoc
			-i ${LICENSE_FILE}
			--template ${LICENSE_FILE_TEMPLATE}
			-s
			-t rtf
			-o ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/license.rtf
		WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
	)

	ADD_CUSTOM_COMMAND( 
		OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/license.txt
		MAIN_DEPENDENCY ${LICENSE_FILE}
		DEPENDS ${LICENSE_FILE} 
		COMMAND pandoc
			-i ${LICENSE_FILE}
			-s
			-t plain+smart
			-o ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/license.txt
		WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
	)

	ADD_CUSTOM_COMMAND( 
		OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/${ISETUP_NAME}${CMAKE_EXECUTABLE_SUFFIX}
		MAIN_DEPENDENCY ${ISETUP_SOURCE}
		DEPENDS 
			${ISETUP_SOURCE}
			../cue/ISO-639-2_utf-8.txt
			../wxCueChapters/cmake/dr-scan.cmake
			../wxCueChapters/cmake/mkcover.cmake
			../wxCueChapters/app.tags.json
			${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/license.txt
			${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/license.rtf
			$<TARGET_FILE:wxCueChapters>
			$<TARGET_FILE:wxCueChaptersGui>
		COMMAND ${ISCC}
			/o${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>
			/f${ISETUP_NAME}
			/dCue2MkcBase=cue2mkc
			/dCue2MkcExe=$<TARGET_FILE:wxCueChapters>
			/dCue2MkcGuiExe=$<TARGET_FILE:wxCueChaptersGui>
			/dCue2MkcExeArch=${EX_PLATFORM_NAME}
			/dLicenseFileRtf=${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/license.rtf
			/dLicenseFileTxt=${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/license.txt
			/dWXWidgetsLibDir=${wxWidgets_LIB_DIR}
			/dWXDllSuffix=${WXWIDGETS_DLL_SUFFIX}
			/dWXVerCompact=${WXWIDGETS_VER_COMPACT}
			/dWXDebug=$<$<CONFIG:Debug>:d>
			$<$<NOT:$<CONFIG:Debug>>:/Q>
			${ISETUP_SOURCE}
		WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
	)

	ADD_CUSTOM_TARGET(isetup SOURCES ${ISETUP_SOURCES} DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/${ISETUP_NAME}${CMAKE_EXECUTABLE_SUFFIX})
	SET_PROPERTY(TARGET isetup PROPERTY FOLDER "setup")

	ADD_CUSTOM_COMMAND(TARGET isetup POST_BUILD 
		COMMAND ${CMAKE_COMMAND} -E copy_if_different ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/license.txt $<TARGET_FILE_DIR:wxCueChapters>
		COMMENT "Copying license file"
	)
ENDIF()
