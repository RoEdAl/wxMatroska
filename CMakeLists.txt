CMAKE_MINIMUM_REQUIRED(VERSION 3.23)

SET(CMAKE_C_STANDARD 11)
SET(CMAKE_C_STANDARD_REQUIRED ON)

SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)

INCLUDE(ExternalProject)
INCLUDE(FetchContent)

PROJECT(wxmatroska VERSION 1.6.1.0)

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

# Test 32/64 bits
if("${CMAKE_SIZEOF_VOID_P}" EQUAL "8")
    SET( EX_PLATFORM 64 )
    SET( EX_PLATFORM_NAME "x64" )
else("${CMAKE_SIZEOF_VOID_P}" EQUAL "8")
	SET( EX_PLATFORM 32 )
    SET( EX_PLATFORM_NAME "x86" )
endif("${CMAKE_SIZEOF_VOID_P}" EQUAL "8")
MESSAGE(STATUS "Target platform: ${EX_PLATFORM_NAME}")

SET(PROJECT_VERSION_STR "${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH} ${EX_PLATFORM_NAME}")
SET(PROJECT_VERSION_STR4 "${PROJECT_VERSION_MAJOR}, ${PROJECT_VERSION_MINOR}, ${PROJECT_VERSION_PATCH}, ${PROJECT_VERSION_TWEAK}")
SET(PROJECT_VERSION_STR4_DOTTED ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}.${PROJECT_VERSION_TWEAK})

SET(PROJECT_CONFIG_FILE ${PROJECT_BINARY_DIR}/app_config.h)
SET(CMAKE_DEBUG_POSTFIX d)

CONFIGURE_FILE(
	${PROJECT_SOURCE_DIR}/app_config.h.in
	${PROJECT_CONFIG_FILE}
)

INCLUDE_DIRECTORIES(${PROJECT_BINARY_DIR})

# external libraries

SET(EXT_INSTALL_PREFIX "${PROJECT_BINARY_DIR}/extlib")
SET_PROPERTY( DIRECTORY PROPERTY EP_BASE "extlib" )
MESSAGE( External projects dir: ${EXT_INSTALL_PREFIX} )

ExternalProject_Add(
	project_zlib
	URL "http://zlib.net/zlib-1.2.12.tar.gz"
	URL_HASH SHA256=91844808532e5ce316b3c010929493c0244f3d37593afd6de04f71821d5136d9
	CMAKE_ARGS
		-DASM686=OFF
		-DAMD64=OFF
		-DCMAKE_DEBUG_POSTFIX=d
		-DCMAKE_INSTALL_PREFIX=${EXT_INSTALL_PREFIX}/Install/project_zlib
	PATCH_COMMAND
		${CMAKE_COMMAND} -DSCRIPT_FILE=${EXT_INSTALL_PREFIX}/Source/project_zlib/CMakeLists.txt -P ${CMAKE_CURRENT_SOURCE_DIR}/cmp0074.cmake
)

SET_PROPERTY(TARGET project_zlib PROPERTY FOLDER "extlib")

ExternalProject_Add (
	project_taglib
	URL "http://github.com/taglib/taglib/releases/download/v1.12/taglib-1.12.tar.gz"
	URL_HASH SHA256=7fccd07669a523b07a15bd24c8da1bbb92206cb19e9366c3692af3d79253b703
	DEPENDS project_zlib
	CMAKE_ARGS
		-DBUILD_SHARED_LIBS=OFF
		-DENABLE_STATIC_RUNTIME=OFF
		-DCMAKE_DEBUG_POSTFIX=d
		-DCMAKE_INSTALL_PREFIX=${EXT_INSTALL_PREFIX}/Install/project_taglib
		-DCMAKE_FIND_USE_SYSTEM_ENVIRONMENT_PATH=OFF
		-DZLIB_ROOT=${EXT_INSTALL_PREFIX}/Install/project_zlib
		-DZLIB_USE_STATIC_LIBS=ON
		-DCMAKE_MINIMUM_REQUIRED_VERSION=${CMAKE_MINIMUM_REQUIRED_VERSION}
	PATCH_COMMAND
		${CMAKE_COMMAND} -DSCRIPT_FILE=${EXT_INSTALL_PREFIX}/Source/project_taglib/CMakeLists.txt -P ${CMAKE_CURRENT_SOURCE_DIR}/cmp0074.cmake
)

SET_PROPERTY(TARGET project_taglib PROPERTY FOLDER "extlib")

ExternalProject_Add (
	project_libwebp
	URL "http://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-1.2.2.tar.gz"
	URL_HASH SHA256=7656532F837AF5F4CEC3FF6BAFE552C044DC39BF453587BD5B77450802F4AEE6
	CMAKE_ARGS
		-DWEBP_ENABLE_SIMD=OFF
		-DWEBP_BUILD_ANIM_UTILS=OFF
		-DWEBP_BUILD_CWEBP=OFF
		-DWEBP_BUILD_DWEBP=OFF
		-DWEBP_BUILD_GIF2WEBP=OFF
		-DWEBP_BUILD_IMG2WEBP=OFF
		-DWEBP_BUILD_VWEBP=OFF
		-DWEBP_BUILD_WEBPINFO=OFF
		-DWEBP_BUILD_LIBWEBPMUX=OFF
		-DWEBP_BUILD_WEBPMUX=OFF
		-DWEBP_BUILD_EXTRAS=OFF
		-DWEBP_BUILD_WEBP_JS=OFF
		-DWEBP_USE_THREAD=ON
		-DWEBP_NEAR_LOSSLESS=ON
		-DWEBP_ENABLE_SWAP_16BIT_CSP=OFF
		-DWEBP_UNICODE=ON
		-DWEBP_BITTRACE=0
		-DCMAKE_DEBUG_POSTFIX=d
		-DCMAKE_INSTALL_PREFIX=${EXT_INSTALL_PREFIX}/Install/project_libwebp
		-DCMAKE_FIND_USE_SYSTEM_ENVIRONMENT_PATH=OFF
		-DCMAKE_MINIMUM_REQUIRED_VERSION=${CMAKE_MINIMUM_REQUIRED_VERSION}
)

SET_PROPERTY(TARGET project_libwebp PROPERTY FOLDER "extlib")

ADD_LIBRARY(ZLib STATIC IMPORTED)
ADD_DEPENDENCIES(ZLib project_zlib) 

FOREACH(CFG ${CMAKE_CONFIGURATION_TYPES})
	STRING(TOUPPER ${CFG} CFGU)
	SET(POSTFIX_VAR_NAME CMAKE_${CFGU}_POSTFIX)

	SET_TARGET_PROPERTIES(ZLib PROPERTIES
		IMPORTED_LOCATION_${CFGU} ${EXT_INSTALL_PREFIX}/Build/project_zlib/${CFG}/${CMAKE_STATIC_LIBRARY_PREFIX}zlibstatic${${POSTFIX_VAR_NAME}}${CMAKE_STATIC_LIBRARY_SUFFIX}
	)
ENDFOREACH()

TARGET_INCLUDE_DIRECTORIES(ZLib INTERFACE ${EXT_INSTALL_PREFIX}/Install/project_zlib/include)

ADD_LIBRARY(TagLib STATIC IMPORTED)
ADD_DEPENDENCIES(TagLib project_taglib)
TARGET_LINK_LIBRARIES(TagLib INTERFACE ZLib)

FOREACH(CFG ${CMAKE_CONFIGURATION_TYPES})
	STRING(TOUPPER ${CFG} CFGU)
	SET(POSTFIX_VAR_NAME CMAKE_${CFGU}_POSTFIX)

	SET_TARGET_PROPERTIES(TagLib PROPERTIES 
		IMPORTED_LOCATION_${CFGU} ${EXT_INSTALL_PREFIX}/Build/project_taglib/taglib/${CFG}/${CMAKE_STATIC_LIBRARY_PREFIX}tag${${POSTFIX_VAR_NAME}}${CMAKE_STATIC_LIBRARY_SUFFIX}
	)
ENDFOREACH()

TARGET_COMPILE_DEFINITIONS(TagLib INTERFACE TAGLIB_STATIC)
TARGET_INCLUDE_DIRECTORIES(TagLib INTERFACE ${EXT_INSTALL_PREFIX}/Install/project_taglib/include)

ADD_LIBRARY(WebP STATIC IMPORTED)
ADD_DEPENDENCIES(WebP project_libwebp)

ADD_LIBRARY(WebPDemux STATIC IMPORTED)
ADD_DEPENDENCIES(WebPDemux project_libwebp)

ADD_LIBRARY(WebPDecoder STATIC IMPORTED)
ADD_DEPENDENCIES(WebPDecoder project_libwebp) 

FOREACH(CFG ${CMAKE_CONFIGURATION_TYPES})
	STRING(TOUPPER ${CFG} CFGU)
	SET(POSTFIX_VAR_NAME CMAKE_${CFGU}_POSTFIX)

	SET_TARGET_PROPERTIES(WebP PROPERTIES
		IMPORTED_LOCATION_${CFGU} ${EXT_INSTALL_PREFIX}/Build/project_libwebp/${CFG}/${CMAKE_STATIC_LIBRARY_PREFIX}webp${${POSTFIX_VAR_NAME}}${CMAKE_STATIC_LIBRARY_SUFFIX}
	)
	SET_TARGET_PROPERTIES(WebPDemux PROPERTIES
		IMPORTED_LOCATION_${CFGU} ${EXT_INSTALL_PREFIX}/Build/project_libwebp/${CFG}/${CMAKE_STATIC_LIBRARY_PREFIX}webpdemux${${POSTFIX_VAR_NAME}}${CMAKE_STATIC_LIBRARY_SUFFIX}
	)
	SET_TARGET_PROPERTIES(WebPDecoder PROPERTIES
		IMPORTED_LOCATION_${CFGU} ${EXT_INSTALL_PREFIX}/Build/project_libwebp/${CFG}/${CMAKE_STATIC_LIBRARY_PREFIX}webpdecoder${${POSTFIX_VAR_NAME}}${CMAKE_STATIC_LIBRARY_SUFFIX}
	)
ENDFOREACH()

TARGET_INCLUDE_DIRECTORIES(WebP INTERFACE ${EXT_INSTALL_PREFIX}/Install/project_libwebp/include)
TARGET_INCLUDE_DIRECTORIES(WebPDemux INTERFACE ${EXT_INSTALL_PREFIX}/Install/project_libwebp/include)
TARGET_INCLUDE_DIRECTORIES(WebPDecoder INTERFACE ${EXT_INSTALL_PREFIX}/Install/project_libwebp/include)

FetchContent_Declare(json URL http://github.com/nlohmann/json/releases/download/v3.10.5/json.tar.xz)
FetchContent_MakeAvailable(json)

# wxWidgets

IF(MSVC)
	SET(wxWidgets_CONFIGURATION mswu)
ENDIF()

FIND_PACKAGE(wxWidgets COMPONENTS core base zlib png xml REQUIRED)
MESSAGE( wxWidgets at ${wxWidgets_ROOT_DIR} )
INCLUDE(${wxWidgets_USE_FILE})
SET(WXWIDGETS_VER_COMPACT "316")

# -------------------------------------------------------------

SET(WXMATROSKA_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/inc)

ADD_SUBDIRECTORY(wxConsoleApp)
ADD_SUBDIRECTORY(wxEncodingDetection)
ADD_SUBDIRECTORY(wxCmdTools)
ADD_SUBDIRECTORY(wxWEBPHandler)
ADD_SUBDIRECTORY(wxCueFile)
ADD_SUBDIRECTORY(wxCueChapters)
ADD_SUBDIRECTORY(wxCueChaptersGui)
ADD_SUBDIRECTORY(setup)

