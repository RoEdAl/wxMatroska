#
# wxMatroska
#
CMAKE_MINIMUM_REQUIRED(VERSION 3.24)
CMAKE_POLICY(SET CMP0063 NEW)
CMAKE_POLICY(SET CMP0135 NEW)

SET(CMAKE_C_STANDARD 11)
SET(CMAKE_C_STANDARD_REQUIRED ON)

SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)

PROJECT(wxmatroska VERSION 1.6.2.0)
SET(WXMATROSKA_BASE_DIR ${CMAKE_CURRENT_SOURCE_DIR})

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

# Test 32/64 bits
if("${CMAKE_SIZEOF_VOID_P}" EQUAL "8")
    SET( EX_PLATFORM 64 )
    SET( EX_PLATFORM_NAME "x64" )
else("${CMAKE_SIZEOF_VOID_P}" EQUAL "8")
	SET( EX_PLATFORM 32 )
    SET( EX_PLATFORM_NAME "x86" )
endif("${CMAKE_SIZEOF_VOID_P}" EQUAL "8")
MESSAGE(STATUS "Target platform: ${EX_PLATFORM_NAME}")

SET(PROJECT_VERSION_STR "${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH} ${EX_PLATFORM_NAME}")
SET(PROJECT_VERSION_STR4 "${PROJECT_VERSION_MAJOR}, ${PROJECT_VERSION_MINOR}, ${PROJECT_VERSION_PATCH}, ${PROJECT_VERSION_TWEAK}")
SET(PROJECT_VERSION_STR4_DOTTED ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}.${PROJECT_VERSION_TWEAK})

SET(PROJECT_INC_DIR ${PROJECT_BINARY_DIR}/include)
SET(PROJECT_CONFIG_FILE ${PROJECT_INC_DIR}/app_config.h)

FILE(MAKE_DIRECTORY ${PROJECT_INC_DIR})
CONFIGURE_FILE(
	${PROJECT_SOURCE_DIR}/app_config.h.in
	${PROJECT_CONFIG_FILE}
)
INCLUDE_DIRECTORIES(${PROJECT_INC_DIR})

IF(MSVC)
	SET(CMAKE_DEBUG_POSTFIX d)
ENDIF()

# external libraries
INCLUDE(ExternalLibraries.cmake)

# GNU

IF(DEFINED MINGW_CFG_FILE)
	MESSAGE(STATUS "MinGW configuration: ${MINGW_CFG_FILE}")
	INCLUDE(${MINGW_CFG_FILE})
	INSTALL(
		IMPORTED_RUNTIME_ARTIFACTS GNU_gcc GNU_stdcxx
		DESTINATION cue2mkc
		COMPONENT cue2mkc
	)
ENDIF()

# wxWidgets

FUNCTION(ConfigureWxWidgetsUsage Target)
	TARGET_LINK_LIBRARIES(${Target} PRIVATE wxWidgets)
ENDFUNCTION()

IF(DEFINED WXWIDGETS_CFG_FILE)
	MESSAGE(STATUS "wxWidgets configuration: ${WXWIDGETS_CFG_FILE}")
	INCLUDE(${WXWIDGETS_CFG_FILE})
	IF(NOT MINGW)
		INSTALL(
			IMPORTED_RUNTIME_ARTIFACTS WX_core WX_base WX_xml
			DESTINATION cue2mkc
			COMPONENT cue2mkc
		)
	ENDIF()
	ADD_LIBRARY(wxWidgets INTERFACE)
	SET(wxWidgets_LIBRARIES 
		WX_core	WX_base WX_xml WX_jpeg WX_png WX_tiff WX_zlib WX_regexu WX_expat
		comctl32 uuid oleacc uxtheme rpcrt4 shlwapi version wsock32)
	MESSAGE(DEBUG "wxWidgets libs: ${wxWidgets_LIBRARIES}")
	TARGET_LINK_LIBRARIES(wxWidgets INTERFACE ${wxWidgets_LIBRARIES})
ELSE()
	FUNCTION(GetWxWidgetsDllSuffix)
		GET_FILENAME_COMPONENT(WXWIDGETS_DLL_SUFFIX ${wxWidgets_LIB_DIR} NAME)
		STRING(FIND ${WXWIDGETS_DLL_SUFFIX} "_" LAST_UND_POS REVERSE)
		STRING(SUBSTRING ${WXWIDGETS_DLL_SUFFIX} 0 ${LAST_UND_POS} WXWIDGETS_DLL_SUFFIX1)
		STRING(SUBSTRING ${WXWIDGETS_DLL_SUFFIX} ${LAST_UND_POS} -1 WXWIDGETS_DLL_SUFFIX2)
		STRING(REPLACE "_" "." WXWIDGETS_DLL_SUFFIX2 ${WXWIDGETS_DLL_SUFFIX2})
		STRING(CONCAT PRES ${WXWIDGETS_DLL_SUFFIX1} ${WXWIDGETS_DLL_SUFFIX2})
		SET(WXWIDGETS_DLL_SUFFIX ${PRES} PARENT_SCOPE)
	ENDFUNCTION()

	FUNCTION(GetWxWidgetsVerCompact)
		FILE(GLOB WXBASEDLL ${wxWidgets_LIB_DIR}/wxbase*u_${WXWIDGETS_DLL_SUFFIX})
		FOREACH(I IN LISTS WXBASEDLL)
			CMAKE_PATH(GET I STEM LAST_ONLY IS)
			STRING(REGEX MATCH "^wxbase([1-9]+)u" ISM ${IS})
			SET(WXWIDGETS_VER_COMPACT ${CMAKE_MATCH_1} PARENT_SCOPE)
			RETURN()
		ENDFOREACH()
	ENDFUNCTION()

	IF(DEFINED CMAKE_CONFIGURATION_TYPES)
		SET(wxWidgets_CONFIGURATION mswu)
	ELSE()
		IF((CMAKE_BUILD_TYPE STREQUAL Debug) OR (CMAKE_BUILD_TYPE STREQUAL RelWithDebInfo))
			SET(wxWidgets_CONFIGURATION mswud)
		ELSE()
			SET(wxWidgets_CONFIGURATION mswu)
		ENDIF()
	ENDIF()

	FIND_PACKAGE(wxWidgets COMPONENTS core base zlib png xml REQUIRED)
	MESSAGE(DEBUG "wxWidgets at: ${wxWidgets_ROOT_DIR}")
	MESSAGE(DEBUG "wxWidgets use file: ${wxWidgets_USE_FILE}")
	MESSAGE(DEBUG "wxWidgets libs: ${wxWidgets_LIBRARIES}")
	MESSAGE(DEBUG "wxWidgets inc: ${wxWidgets_INCLUDE_DIRS}")
	MESSAGE(DEBUG "wxWidgets defs: ${wxWidgets_CXX_FLAGS}")

	GetWxWidgetsDllSuffix()
	GetWxWidgetsVerCompact()
	MESSAGE(DEBUG "wxWidgets DLL suffix: ${WXWIDGETS_DLL_SUFFIX}")
	MESSAGE(DEBUG "wxWidgets compact version: ${WXWIDGETS_VER_COMPACT}")

	# INCLUDE(${wxWidgets_USE_FILE})
	ADD_LIBRARY(wxWidgets INTERFACE)
	TARGET_LINK_LIBRARIES(wxWidgets INTERFACE ${wxWidgets_LIBRARIES})
	TARGET_COMPILE_DEFINITIONS(wxWidgets INTERFACE WXUSINGDLL)
	TARGET_INCLUDE_DIRECTORIES(wxWidgets INTERFACE
		${wxWidgets_LIB_DIR}/$<IF:$<CONFIG:Debug,RelWithDebInfo>,mswud,mswu>
		${wxWidgets_ROOT_DIR}/include
	)
ENDIF()

# -------------------------------------------------------------

SET(WXMATROSKA_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/inc)

FUNCTION(ConfigureWxMatroska TargetName)
	TARGET_PRECOMPILE_HEADERS(${TargetName} PRIVATE StdWx.h)
	TARGET_INCLUDE_DIRECTORIES(${TargetName} PRIVATE ${WXMATROSKA_INCLUDE_DIR})
ENDFUNCTION()

FUNCTION(ConfigureSourceEncoding TargetName)
	TARGET_COMPILE_OPTIONS(${TargetName} PRIVATE
		"$<$<CXX_COMPILER_ID:MSVC>:/utf-8>"
		"$<$<CXX_COMPILER_ID:GNU>:-finput-charset=UTF-8>"
		"$<$<CXX_COMPILER_ID:GNU>:-ffile-prefix-map=${PROJECT_BINARY_DIR}=.>"
	)
ENDFUNCTION()

ADD_COMPILE_DEFINITIONS("UNICODE" "_UNICODE")

ADD_SUBDIRECTORY(wxConsoleApp)

ADD_SUBDIRECTORY(wxEncodingDetection)
TARGET_INCLUDE_DIRECTORIES(wxEncodingDetection PRIVATE ${WXMATROSKA_INCLUDE_DIR})

ADD_SUBDIRECTORY(wxCmdTools)
TARGET_INCLUDE_DIRECTORIES(wxCmdTools PRIVATE ${WXMATROSKA_INCLUDE_DIR})

ADD_SUBDIRECTORY(wxWEBPHandler)
ADD_SUBDIRECTORY(wxCueFile)
ADD_SUBDIRECTORY(wxCueChapters)
ADD_SUBDIRECTORY(wxCueChaptersGui)
ADD_SUBDIRECTORY(mu-img2pdf)
ADD_SUBDIRECTORY(setup)

INCLUDE(cpack/Installer.cmake)
