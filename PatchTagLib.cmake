#
# PatchTagLib.cmake
#

CMAKE_MINIMUM_REQUIRED(VERSION 3.23)
IF(NOT DEFINED TAGLIB_DIR OR NOT EXISTS ${TAGLIB_DIR})
	MESSAGE(FATAL_ERROR "PatchTagLib: TAGLIB_DIR not defined")
ENDIF()
MESSAGE(VERBOSE "Patching TagLib at: ${TAGLIB_DIR}")

# Main script
FILE(STRINGS ${TAGLIB_DIR}/CMakeLists.txt SCRIPT_CNT)
LIST(INSERT SCRIPT_CNT 1 "CMAKE_POLICY(SET CMP0074 NEW)")
LIST(POP_FRONT SCRIPT_CNT)
LIST(PREPEND SCRIPT_CNT "CMAKE_MINIMUM_REQUIRED(VERSION 3.23)")
LIST(JOIN SCRIPT_CNT "\n" SCRIPT_SCR)
FILE(WRITE ${TAGLIB_DIR}/CMakeLists.txt ${SCRIPT_SCR})

# TagLib script
FILE(APPEND ${TAGLIB_DIR}/taglib/CMakeLists.txt [=[
CMAKE_PATH(APPEND CMAKE_CURRENT_SOURCE_DIR .. include OUTPUT_VARIABLE PUBLIC_INCLUDE)
CMAKE_PATH(ABSOLUTE_PATH PUBLIC_INCLUDE NORMALIZE)
FILE(MAKE_DIRECTORY ${PUBLIC_INCLUDE}/taglib)
FOREACH(I IN LISTS tag_HDRS)
	CMAKE_PATH(GET I FILENAME INCLUDE_NAME)
	CMAKE_PATH(IS_RELATIVE I RELATIVE_INCLUDE)
	IF(RELATIVE_INCLUDE)
		FILE(CREATE_LINK ${CMAKE_CURRENT_SOURCE_DIR}/${I} ${PUBLIC_INCLUDE}/taglib/${INCLUDE_NAME} COPY_ON_ERROR)
	ELSE()
		FILE(CREATE_LINK ${I} ${PUBLIC_INCLUDE}/taglib/${INCLUDE_NAME} COPY_ON_ERROR)
	ENDIF()
ENDFOREACH()

TARGET_INCLUDE_DIRECTORIES(tag INTERFACE ${PUBLIC_INCLUDE})
TARGET_COMPILE_DEFINITIONS(tag INTERFACE TAGLIB_STATIC)
]=])
